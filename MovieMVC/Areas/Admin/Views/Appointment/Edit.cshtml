@model MovieMVC.Model.Appointment
@using MovieMVC.Utilities
@using MovieMVC.Extensions;
using Microsoft.AspNetCore.Authorization;
@{
    ViewData["Title"] = "Edit Appointment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />

<h4 class="text-white-50">Edit Appointment</h4>
<br />

<form asp-action="Edit" enctype="multipart/form-data" method="post">
    <div class="p-lg-4 border rounded row text-white-50">
        <input hidden asp-for="@Model.Id" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-6">

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="@Model.CustomerName"></label>
                </div>
                <div class="col-8">
                    <input asp-for="@Model.CustomerName" class="form-control" />
                </div>
                <span asp-validation-for="@Model.CustomerName" class="text-danger"></span>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="@Model.CustomerEMail"></label>
                </div>
                <div class="col-8">
                    <input asp-for="@Model.CustomerEMail" class="form-control" />
                </div>
                <span asp-validation-for="@Model.CustomerEMail" class="text-danger"></span>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="@Model.AppointmentDate"></label>
                </div>
                <div class="col-8">
                    <input asp-for="@Model.AppointmentDate" id="datepicker" type="text" class="form-control" />
                </div>
                <span asp-validation-for="@Model.AppointmentDate" class="text-danger"></span>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="@Model.AppointmentTime"></label>
                </div>
                <div class="col-8">
                    <input asp-for="@Model.AppointmentTime" class="timepicker form-control" type="text" />
                </div>
                <span asp-validation-for="@Model.AppointmentTime" class="text-danger"></span>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="@Model.CustomerPhoneNumber"></label>
                </div>
                <div class="col-8">
                    <input asp-for="@Model.CustomerPhoneNumber" class="form-control" />
                </div>
                <span asp-validation-for="@Model.CustomerPhoneNumber" class="text-danger"></span>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="@Model.EmployeeId"></label>
                </div>
                <div class="col-8">
                    @if (User.IsInRole(SD.Role_Employee))
                    {
                        <input asp-for="@Model.Employee.Name" class="form-control" readonly />
                        <input asp-for="@Model.EmployeeId" class="form-control" readonly />
                    }
                    else
                    {
                        <select asp-for="@Model.EmployeeId" asp-items="@ViewBag.EmployeeList" class="form-control"></select>
                    }
                </div>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="@Model.isConfirmed"></label>
                </div>
                <div class="col-8">
                    <input asp-for="@Model.isConfirmed" class="form-control" />
                </div>
            </div>

        </div>
        <br />
        <div class="form-group">
            <input type="submit" class="btn btn-primary" value="Update" />
            <a asp-action="Index" class="btn btn-success">Back to List</a>
        </div>
    </div>
</form>


@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $('.timepicker').timepicker({
            timeFormat: 'h:mm p',
            interval: 30,
            minTime: '10',
            maxTime: '3:00pm',
            startTime: '10:00',
            dynamic: true,
            dropdown: true,
            scrollbar: true
        });

        $(function () {
            $("#datepicker").datepicker({
                minDate: +1, maxDate: "+3M", dateFormat: 'dd-mm-yy'
            });
        });

        $(document).ready(function () {
            var appointmentTime = document.getElementById('datepicker').value;
            var splitData = "";
            console.log(appointmentTime)
            if (appointmentTime.indexOf(" ") > 0) {
                splitData = appointmentTime.split(" ");
            }
            else {
                splitData = appointmentTime.split("T");

            }

            var time = splitData[1].substring(0, 5);
            if (time.slice(-1) == ":") {
                time = time.substring(0, time.length - 1);
            }
            console.log(splitData[0])
            console.log(time)
            if (time.substring(0, 2) > 12) {
                amPmTime = 'PM'

            } else {
                amPmTime = 'AM'
            }
            $('#datepicker').attr('value', splitData[0]);
            $('.timepicker').attr('value', time + ' ' + amPmTime);

        });

    </script>
}
